--select * from actor_films;

-- CREATE TYPE films as (
-- film VARCHAR(255),
-- votes INTEGER,
-- ratings FLOAT,
-- filmid VARCHAR(255)
-- )

-- CREATE TABLE actors (
-- actor_id VARCHAR(255),
-- actor VARCHAR(255),
-- films films[],
-- quality_class VARCHAR(10),
-- is_active BOOLEAN
-- )

-- select * from actors;
-- DROP TABLE actors

-- INSERT INTO actors (actor_id,actor, films,quality_class,is_active)
-- SELECT 
-- actorid,
-- actor,
-- ARRAY_AGG(ROW(film,votes,rating,filmid)::films) AS films,
-- CASE 
--         WHEN AVG(rating) > 8 THEN 'star'
--         WHEN AVG(rating) > 7 THEN 'good'
--         WHEN AVG(rating) > 6 THEN 'average'
--         ELSE 'bad'
--     END AS quality_class,
-- MAX(year) = EXTRACT(YEAR FROM CURRENT_DATE ) AS is_active
-- FROM actor_films
-- GROUP BY actorid, actor

-- select * from actors;

-- SELECT 
--     table_name,
--     pg_size_pretty(pg_total_relation_size(table_name::text)) AS total_size
-- FROM information_schema.tables
-- WHERE table_schema = 'public';  -- Adjust the schema as needed
